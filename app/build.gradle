plugins {
    id 'com.android.application'
    
}

android {
    namespace 'com.micewine.emu'
    compileSdkVersion 33
    buildToolsVersion '34.0.4'
    ndkVersion "26.1.10909125"
    defaultConfig {
   def signingConfig = project(':app').android.signingConfigs.debug
   def keyStore = java.security.KeyStore.getInstance(java.security.KeyStore.getDefaultType())
keyStore.load(new FileInputStream(signingConfig.storeFile), signingConfig.keyPassword.toCharArray())

        applicationId "com.micewine.emu"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.beta"
        buildConfigField "String", "COMMIT", "\"" + ("git rev-parse HEAD\n".execute().getText().trim() ?: (System.getenv('CURRENT_COMMIT') ?: "NO_COMMIT")) + "\""
        buildConfigField "String", "logTag", "\"Termux:X11 loader\""
        buildConfigField "int", "SIGNATURE", String.valueOf(Arrays.hashCode(keyStore.getCertificate(signingConfig.keyAlias).getEncoded()))
        buildConfigField "String", "CLASS_ID", "\"com.micewine.emu.CmdEntryPoint\""
        buildConfigField "String", "packageNotInstalledErrorText",
        """\"Termux:X11 application is not found.\" +
        \"You should choose latest successful workflow here: https://github.com/termux/termux-x11/actions/workflows/debug_build.yml\" +
        \"After this you should download \\"micewine-emu-ARCH-debug\\" or \\"micewine-emu-universal-debug\\" artifact and install apk contained in this zip file.\""""
        buildConfigField "String", "packageSignatureMismatchErrorText",
        "\"Signature verification of target application " + android.namespace + " failed.\\nPlease, reinstall both micewine-emu package and Termux:X11 application from the same source\""
        buildConfigField "String", "COMMIT", "\"" + ("git rev-parse HEAD\n".execute().getText().trim() ?: (System.getenv('CURRENT_COMMIT') ?: "NO_COMMIT")) + "\""
  }

    signingConfigs.debug {
        storeFile file('testkey_untrusted.jks')
        keyAlias 'alias'
        storePassword 'xrj45yWGLbsO7W0v'
        keyPassword 'xrj45yWGLbsO7W0v'
        
        
    }

    splits.abi {
        enable true
        reset()

        include "armeabi-v7a", "arm64-v8a"
        universalApk true
    }


    compileOptions.sourceCompatibility JavaVersion.VERSION_11
    compileOptions.targetCompatibility JavaVersion.VERSION_11
    packagingOptions.jniLibs.useLegacyPackaging false
    buildFeatures.aidl true
    buildFeatures.buildConfig true
    buildTypes.debug {
        signingConfig signingConfigs.debug
        postprocessing {
            removeUnusedCode true
            removeUnusedResources true
            obfuscate false
            optimizeCode true
        }
    }
    
   sourceSets {
        main {
            jniLibs.srcDirs += ['libs']
        }
    }
    
    sourceSets {
        main {
            aidl.srcDirs += ['src/main/aidl']
            
        }

    }
    
    buildFeatures {
        viewBinding true
        
    }
    
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
    
}

dependencies {

implementation 'net.lingala.zip4j:zip4j:2.11.5'

    //noinspection DifferentStdlibGradleVersion
    implementation("androidx.appcompat:appcompat:1.6.1")
    implementation("androidx.constraintlayout:constraintlayout:2.1.4")
    implementation("com.google.android.material:material:1.9.0")
   implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.20"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
    implementation 'androidx.preference:preference:1.2.1'
 // implementation 'com.squareup.picasso:picasso:2.71828'
implementation 'com.github.luben:zstd-jni:1.5.2-3@aar'
    implementation 'org.tukaani:xz:1.7'
    implementation 'org.apache.commons:commons-compress:1.20'

    compileOnly project(':shell-loader:stub')
}